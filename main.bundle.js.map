{"version":3,"sources":["F:/AngularCrud/AngularCrud/src/$_lazy_route_resource lazy","F:/AngularCrud/AngularCrud/src/app/Shared/Services/facade.service.ts","F:/AngularCrud/AngularCrud/src/app/Shared/Services/gpdetails.sevice.ts","F:/AngularCrud/AngularCrud/src/app/Shared/Services/patients.service.ts","F:/AngularCrud/AngularCrud/src/app/Shared/select-required-valiator.directive.ts","F:/AngularCrud/AngularCrud/src/app/app.component.css","F:/AngularCrud/AngularCrud/src/app/app.component.html","F:/AngularCrud/AngularCrud/src/app/app.component.ts","F:/AngularCrud/AngularCrud/src/app/app.module.ts","F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.css","F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.html","F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.ts","F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.css","F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.html","F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.ts","F:/AngularCrud/AngularCrud/src/app/patients/create-patient-can-deactive-guard.service.ts","F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.css","F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.html","F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.ts","F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.css","F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.html","F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.ts","F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.css","F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.html","F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.ts","F:/AngularCrud/AngularCrud/src/environments/environment.ts","F:/AngularCrud/AngularCrud/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;;;;;;;;;;;;;;ACVqD;AACC;AACD;AAMrD;IAEI,+BAA+B;IAC/B,uBAAoB,eAAgC,EACxC,gBAAiC;QADzB,oBAAe,GAAf,eAAe,CAAiB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAM,CAAC;IAEpD,6BAA6B;IAC7B,mCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IAED,8BAA8B;IAC9B,kCAAU,GAAV,UAAW,EAAS;QAChB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,sCAAsC;IACtC,mCAAW,GAAX,UAAY,OAAgB;QACxB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,4BAA4B;IAC5B,qCAAa,GAAb,UAAc,OAAgB;QAC1B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,gCAAgC;IAChC,qCAAa,GAAb,UAAc,EAAS;QACnB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,yCAAyC;IACzC,oCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,qCAAa,GAAb,UAAc,QAAkB;QAC9B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAvCQ,aAAa;QAFzB,yEAAU,EAAE;QACb,+CAA+C;;yCAIN,0EAAe;YACvB,2EAAgB;OAJpC,aAAa,CAwCzB;IAAD,oBAAC;CAAA;AAxCyB;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AAIG;AACb;AACE;AACiD;AAChB;AAIlE;IAIE,gCAAgC;IAC/B,0BACY,KAAU,EACV,WAAsB;QADtB,UAAK,GAAL,KAAK,CAAK;QACV,gBAAW,GAAX,WAAW,CAAW;QALnC,eAAU,GAAG,4BAA4B,CAAC;IAKL,CAAC;IAGrC,wBAAwB;IACxB,uCAAY,GAAZ;QAEC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,WAAW,CAAC;aAC/C,GAAG,CAAC,UAAC,QAAiB,IAAG,OAAY,QAAQ,CAAC,IAAI,EAAE,EAA3B,CAA2B,CAAC;aACrD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,oDAAoD;IACpD,+BAAI,GAAJ,UAAK,QAAkB;QAEjB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAW,IAAI,CAAC,UAAU,GAAC,uBAAuB,EAAC,QAAQ,EAAC;YACpF,OAAO,EAAC,IAAI,yEAAW,CAAC;gBACpB,cAAc,EAAC,kBAAkB;aAClC,CAAC;SACP,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAAA,CAAC;IACjC,CAAC;IAEO,sCAAW,GAAnB,UAAoB,aAAgC;QAEnD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,aAAa,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,IAAI,wFAAe,CAAC,8FAA8F,CAAC,CAAC;IAC3H,CAAC;IApCO,gBAAgB;QAF5B,yEAAU,EAAE;QACb,6BAA6B;;yCAOR,2DAAI;YACE,wEAAU;OAPxB,gBAAgB,CAqC5B;IAAD,uBAAC;CAAA;AArC4B;;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AAIG;AACb;AACE;AACiD;AAChB;AAGlE;IAII,oCAAoC;IACpC,yBAAoB,KAAU,EAClB,WAAsB;QADd,UAAK,GAAL,KAAK,CAAK;QAClB,gBAAW,GAAX,WAAW,CAAW;QAJlC,gBAAW,GAAG,4BAA4B,CAAC;IAKzC,CAAC;IAIJ,8BAA8B;IAC9B,qCAAW,GAAX;QACC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;aACjD,GAAG,CAAC,UAAC,QAAiB,IAAG,OAAW,QAAQ,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC;aACpD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,mCAAmC;IACnC,oCAAU,GAAV,UAAW,EAAS;QACnB,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAC,WAAW,GAAC,EAAE,CAAC;aACpC,GAAG,CAAC,UAAC,QAAiB,IAAG,OAAW,QAAQ,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC;aACpD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;IAED,8BAA8B;IAC9B,8BAAI,GAAJ,UAAK,OAAgB;QACf,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAU,IAAI,CAAC,WAAW,GAAC,qBAAqB,EAAC,OAAO,EAAC;YACjF,OAAO,EAAC,IAAI,yEAAW,CAAC;gBACpB,cAAc,EAAC,kBAAkB;aAClC,CAAC;SACP,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAAA,CAAC;IAClC,CAAC;IAED,gCAAgC;IAChC,uCAAa,GAAb,UAAc,OAAgB;QACzB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAO,IAAI,CAAC,WAAW,GAAC,WAAW,GAAE,OAAO,CAAC,EAAE,EAAC,OAAO,EAAC;YAC/E,OAAO,EAAC,IAAI,yEAAW,CAAC;gBACpB,cAAc,EAAC,kBAAkB;aAClC,CAAC;SACP,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,gCAAgC;IAC/B,uCAAa,GAAb,UAAc,EAAS;QACtB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAO,IAAI,CAAC,WAAW,GAAC,WAAW,GAAC,EAAE,EAAC;YACnE,OAAO,EAAC,IAAI,yEAAW,CAAC;gBACpB,cAAc,EAAC,kBAAkB;aAClC,CAAC;SACJ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,qCAAW,GAAnB,UAAoB,aAAgC;QACnD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,aAAa,CAAC,CAAC;QACxD,CAAC;QACD,uEAAuE;QACvE,MAAM,CAAC,IAAI,wFAAe,CAAC,8FAA8F,CAAC,CAAC;IAC/H,CAAC;IA5DY,eAAe;QAD3B,yEAAU,EAAE;yCAMiB,2DAAI;YACN,wEAAU;OANzB,eAAe,CA8D3B;IAAD,sBAAC;CAAA;AA9D2B;;;;;;;;;;;;;;;;;;;;;ACX+C;AAC3E,0CAA0C;AACO;AAUjD;IAAA;IASA,CAAC;yCATY,gCAAgC;IAIzC,mDAAQ,GAAR,UAAS,OAAwB;QAC7B,iEAAiE;QACjE,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtB,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACnE,CAAC;IALQ;QAAR,oEAAK,EAAE;;gFAA4B;IAH3B,gCAAgC;QAR5C,wEAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,SAAS,EAAE,CAAC;oBACR,OAAO,EAAE,qEAAa;oBACtB,WAAW,EAAE,kCAAgC;oBAC7C,KAAK,EAAE,IAAI;iBACd,CAAC;SACL,CAAC;OACW,gCAAgC,CAS5C;IAAD,uCAAC;;CAAA;AAT4C;;;;;;;;ACZ7C,2BAA2B,mBAAO,CAAC,wCAA+C;AAClF;;;AAGA;AACA,cAAc,QAAS,oBAAoB,iCAAiC,KAAK,oBAAoB,0BAA0B,aAAa;;AAE5I;;;AAGA;AACA,2C;;;;;;;ACXA,2mB;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACW;AACT;AACiB;AACiC;AAGgB;AACvD;AACX;AACI;AAC+B;AACH;AACE;AACE;AACA;AACvB;AACL;AACY;AACK;AACD;AAElE,IAAM,SAAS,GAAQ;IACrB,EAAE,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,iGAAqB,EAAE;IAC/C,EAAE,IAAI,EAAC,UAAU;QACjB,SAAS,EAAC,mGAAsB;QAChC,aAAa,EAAC,CAAC,oIAAuC,CAAC;KACvD;IACD,EAAE,IAAI,EAAC,cAAc,EAAC,SAAS,EAAC,qGAAuB,EAAE;IACzD,EAAE,IAAI,EAAC,gBAAgB,EAAC,SAAS,EAAC,qGAAuB,EAAE;IAC1D,EAAE,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAE;CAChD;AAgCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,oGAAsB;gBACtB,iGAAqB;gBACrB,mGAAsB;gBACtB,oHAAgC;gBAChC,qGAAuB;gBACvB,qGAAuB;aACxB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,8EAAgB;gBAChB,iEAAU;gBACV,oFAAkB,CAAC,OAAO,EAAE;gBAC5B,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,+EAAmB;gBACnB,4EAAmB;aACpB;YACD,OAAO,EAAC;gBACN,4EAAmB;aACpB;YACD,SAAS,EAAE;gBACT,uFAAa;gBACb,4FAAgB;gBAChB,2FAAe;gBACf,oIAAuC;aAAC;YAC1C,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;AChEtB,2BAA2B,mBAAO,CAAC,wCAAkD;AACrF;;;AAGA;AACA,cAAc,QAAS,eAAe,oBAAoB,qBAAqB,KAAK,oBAAoB,6BAA6B,6BAA6B,sBAAsB,kCAAkC,mCAAmC,oCAAoC,KAAK;;AAEtS;;;AAGA;AACA,2C;;;;;;;ACXA,6JAA6J,eAAe,gcAAgc,iBAAiB,sNAAsN,6BAA6B,2NAA2N,4BAA4B,8MAA8M,sBAAsB,8MAA8M,gBAAgB,mNAAmN,qBAAqB,kNAAkN,mBAAmB,uG;;;;;;;;;;;;;;;;;;;ACAp8D;AAQlD;IAwCE;QArCA,cAAS,GAAe;YACtB;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM;gBACd,iBAAiB,EAAE,OAAO;gBAC1B,KAAK,EAAE,qBAAqB;gBAC5B,WAAW,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBACnC,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,wBAAwB;aACpC;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,QAAQ;gBAChB,iBAAiB,EAAE,OAAO;gBAC1B,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;gBACnC,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,wBAAwB;aACpC;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM;gBACd,iBAAiB,EAAE,OAAO;gBAC1B,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC;gBAClC,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,wBAAwB;aACpC;SACF,CAAC;IAGc,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IA3CU,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,sBAAsB,CA6ClC;IAAD,6BAAC;CAAA;AA7CkC;;;;;;;;ACRnC,2BAA2B,mBAAO,CAAC,wCAAkD;AACrF;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,47G;;;;;;;;;;;;;;;;;;;;;;ACA6D;AAErB;AAEe;AAEW;AAOlE;IAEE,iCAAoB,cAA4B,EAAS,OAAc;QAAnD,mBAAc,GAAd,cAAc,CAAc;QAAS,YAAO,GAAP,OAAO,CAAO;QAEvE,aAAQ,GAAc;YACpB,EAAE,EAAC,IAAI;YACP,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,IAAI;SACd,CAAC;IARyE,CAAC;IAY5E,0CAAQ,GAAR;IACA,CAAC;IAED,8CAAY,GAAZ,UAAa,YAAoB;QAAjC,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxD,UAAC,IAAa;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClC,CAAC,EACA,UAAC,KAAS,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAChC,CAAC;IAET,CAAC;IAf0B;QAA1B,0EAAS,CAAC,cAAc,CAAC;kCAAsB,8DAAM;iEAAC;IAZ5C,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAGmC,sFAAa,EAAiB,+DAAM;OAF5D,uBAAuB,CA4BnC;IAAD,8BAAC;CAAA;AA5BmC;;;;;;;;;;;;;;;;;;;;ACbO;AAK3C;IAGI;IAAgB,CAAC;IAEjB,+DAAa,GAAb,UAAc,SAAiC;QAC3C,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;QACrE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAXQ,uCAAuC;QADnD,yEAAU,EAAE;;OACA,uCAAuC,CAYnD;IAAD,8CAAC;CAAA;AAZmD;;;;;;;;ACLpD,2BAA2B,mBAAO,CAAC,wCAAkD;AACrF;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,gUAAgU,YAAY,iiJAAiiJ,cAAc,kgJ;;;;;;;;;;;;;;;;;;;;;;ACA9zJ;AACrB;AAGe;AAGW;AAOlE;IA2BE,gCAAoB,cAA4B,EACtC,OAAc,EACd,MAAqB;QAFX,mBAAc,GAAd,cAAc,CAAc;QACtC,YAAO,GAAP,OAAO,CAAO;QACd,WAAM,GAAN,MAAM,CAAe;QAxB/B,WAAM,GAAG,MAAM,CAAC;QAEhB,aAAQ,GAAa;YACnB,EAAE,EAAE,IAAI;YACR,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,IAAI;YACf,OAAO,EAAG,IAAI;YACd,WAAW,EAAG,IAAI;YAClB,MAAM,EAAE,IAAI;YACZ,kBAAkB,EAAE,IAAI;YACxB,mBAAmB,EAAE,IAAI;YACzB,OAAO,EAAE,IAAI;YACb,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,IAAI;YACjB,WAAW,EAAC,IAAI;YAChB,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;SAChB,CAAC;QASA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EACtC;YACE,cAAc,EAAC,iBAAiB;YAChC,eAAe,EAAC,IAAI;YACpB,eAAe,EAAE,YAAY;SAC9B,CAAC,CAAC;IACP,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,sBAAY;YACzC,IAAM,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnC,KAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAW,GAAnB,UAAoB,EAAS;QAA7B,iBAgCC;QA/BA,EAAE,EAAC,EAAE,KAAK,CAAC,CAAC,EAAC;YAEX,IAAI,CAAC,QAAQ,GAAG;gBACf,EAAE,EAAE,IAAI;gBACR,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,IAAI;gBACf,OAAO,EAAG,IAAI;gBACd,WAAW,EAAG,IAAI;gBAClB,MAAM,EAAE,IAAI;gBACZ,kBAAkB,EAAE,IAAI;gBACxB,mBAAmB,EAAE,IAAI;gBACzB,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAC,IAAI;gBAChB,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;aAChB,CAAC;YAEF,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,oBAAoB,IAAG,YAAI,CAAC,oBAAoB,GAAC,oBAAoB,EAA9C,CAA8C,CAAC,CAAC;YACrH,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QAGrC,CAAC;QAAA,IAAI,EAAC;YACL,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,oBAAoB,IAAG,YAAI,CAAC,oBAAoB,GAAC,oBAAoB,EAA9C,CAA8C,CAAC,CAAC;YACrH,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW,IAAG,YAAI,CAAC,QAAQ,GAAC,WAAW,EAAzB,CAAyB,CAAC,CAAC;QAExF,CAAC;IAEF,CAAC;IAED,6CAAY,GAAZ,UAAa,YAAoB;QAAjC,iBAsBC;QApBC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,EAAC;YAE3B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACtD,UAAC,IAAY;gBACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC9B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,CAAC,EACA,UAAC,KAAS,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAChC,CAAC;QACP,CAAC;QAAA,IAAI,EAAC;YAEJ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxD;gBACE,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC9B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,CAAC,EACA,UAAC,KAAS,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAChC,CAAC;QACP,CAAC;IACH,CAAC;IApG0B;QAA1B,0EAAS,CAAC,cAAc,CAAC;kCAA2B,8DAAM;qEAAC;IAHjD,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCA4BmC,sFAAa;YAC9B,+DAAM;YACP,uEAAc;OA7BpB,sBAAsB,CAwGlC;IAAD,6BAAC;CAAA;AAxGkC;;;;;;;;ACdnC,2BAA2B,mBAAO,CAAC,wCAAkD;AACrF;;;AAGA;AACA,cAAc,QAAS,kBAAkB,4BAA4B,KAAK,6BAA6B,iCAAiC,KAAK,uBAAuB,qBAAqB,2BAA2B,KAAK;;AAEzN;;;AAGA;AACA,2C;;;;;;;ACXA,swBAAswB,mCAAmC,0CAA0C,kCAAkC,yBAAyB,+BAA+B,mBAAmB,8BAA8B,mBAAmB,6BAA6B,8nB;;;;;;;;;;;;;;;;;;;;;ACA59B;AAGX;AAE2B;AAMlE;IAIE,+BAAoB,cAA4B,EACnC,OAAe;QADR,mBAAc,GAAd,cAAc,CAAc;QACnC,YAAO,GAAP,OAAO,CAAQ;QAJ5B,uBAAuB;QACvB,MAAC,GAAW,CAAC,CAAC;IAIL,CAAC;IACV,wCAAQ,GAAR;QAAA,iBAGC;QAFC,0FAA0F;QAC1F,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,WAAW,IAAG,YAAI,CAAC,QAAQ,GAAC,WAAW,EAAzB,CAAyB,CAAC,CAAC;QAAA,CAAC;IACzF,CAAC;IAED,wCAAQ,GAAR,UAAS,SAAgB;QAEvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,SAAS,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,wCAAQ,GAAR,UAAS,SAAgB;QAAzB,iBAaC;QAXC,EAAE,EAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CACpD;gBACE,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,CAAC,EACA,UAAC,KAAS,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAChC,CAAC;YACL,oDAAoD;QACtD,CAAC;IAGH,CAAC;IACD,sCAAM,GAAN,UAAO,SAAgB;QAErB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC,CAAC;IAC7C,CAAC;IAlCU,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAKmC,sFAAa;YAC1B,+DAAM;OALjB,qBAAqB,CAmCjC;IAAD,4BAAC;CAAA;AAnCiC;;;;;;;;ACXlC,2BAA2B,mBAAO,CAAC,wCAAkD;AACrF;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,wHAAwH,0BAA0B,4UAA4U,2BAA2B,mNAAmN,0BAA0B,kNAAkN,wBAAwB,uNAAuN,mCAAmC,gNAAgN,uBAAuB,uOAAuO,oCAAoC,2OAA2O,0BAA0B,qPAAqP,wBAAwB,6PAA6P,6BAA6B,sQAAsQ,4BAA4B,qRAAqR,4BAA4B,qSAAqS,4BAA4B,qTAAqT,4BAA4B,6P;;;;;;;;;;;;;;;;;;;;;ACA3pH;AACH;AAGmB;AAOlE;IAEE,iCAAoB,MAAsB,EACtB,cAA4B;QAD5B,WAAM,GAAN,MAAM,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAc;IAC5C,CAAC;IAEL,0CAAQ,GAAR;QAAA,iBAKC;QAJC,IAAM,EAAE,GAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1C,UAAC,WAAW,IAAG,YAAI,CAAC,aAAa,GAAC,WAAW,EAA9B,CAA8B,CAAC,CAAC;QACjD,qDAAqD;IACvD,CAAC;IAXU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAG4B,uEAAc;YACP,sFAAa;OAHrC,uBAAuB,CAYnC;IAAD,8BAAC;CAAA;AAZmC;;;;;;;;;ACXpC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable, Injector } from \"@angular/core\";\r\nimport { GPDetailsService } from \"./gpdetails.sevice\";\r\nimport { PatientsService } from \"./patients.service\";\r\nimport { Patient } from \"../../models/patient.model\";\r\nimport { GPDetail } from \"../../models/gpdetail.model\";\r\n\r\n@Injectable()\r\n//.......... Face Design Patten in Implemented \r\nexport class FacadeService{\r\n\r\n    //......... Inject Dependencies\r\n    constructor(private _patientService: PatientsService,\r\n        private _gpDetailService:GPDetailsService ) {  }\r\n   \r\n    //..........Get All Patients \r\n    GetPatients(){\r\n        return this._patientService.getPatients();\r\n    }\r\n\r\n    //..........Get Patient By ID \r\n    GetPatient(ID:number){\r\n        return this._patientService.getPatient(ID);\r\n    }\r\n    \r\n    //..........Save Patients To Database \r\n    SavePatient(patient: Patient){\r\n        return this._patientService.Save(patient);\r\n    }\r\n\r\n    //..........Update Patient  \r\n    UpdatePatient(patient: Patient){\r\n        return this._patientService.UpdatePatient(patient);\r\n    }\r\n\r\n    //..........Delete Patient by ID\r\n    DeletePatient(id:number){\r\n        return this._patientService.deletePatient(id);\r\n    }\r\n\r\n    //..........GetGpDetails for dropdownlist\r\n    GetGpDetails(){\r\n        return this._gpDetailService.getGpDetails(); \r\n    }\r\n\r\n    //..........Save GPDetails in Database\r\n    SaveGPDetails(gpDetail: GPDetail){\r\n      return this._gpDetailService.Save(gpDetail);\r\n    }  \r\n}\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/Shared/Services/facade.service.ts","import {Injectable} from '@angular/core';\r\nimport { GPDetail } from '../../models/gpdetail.model';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Http,Response} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\n\r\n@Injectable()\r\n//..........  GPDetailService\r\nexport class GPDetailsService{\r\n\r\n  baseAPIUrl = 'http://localhost:58010/api';\r\n   \r\n  //......    Inject dependencies \r\n   constructor(\r\n       private _http:Http,\r\n       private _httpClient:HttpClient){}\r\n\r\n   \r\n   //......   Get GPDetails\r\n   getGpDetails(): Observable<GPDetail[]> \r\n   {    \r\n    return  this._http.get(this.baseAPIUrl+'/GPDetail')\r\n       .map((response:Response)=><GPDetail[]>response.json())\r\n       .catch(this.handleError);\r\n   }\r\n \r\n   //......  Save General Practitioner data to database\r\n   Save(gpDetail: GPDetail):Observable<GPDetail>\r\n    {       \r\n         return this._httpClient.post<GPDetail>(this.baseAPIUrl+'/GPDetail/AddGPDetail',gpDetail,{\r\n             headers:new HttpHeaders({\r\n                 'Content-Type':'application/json'\r\n               })\r\n         }).catch(this.handleError);;        \r\n    }\r\n\r\n    private handleError(errorResponse: HttpErrorResponse) \r\n    {\r\n     if (errorResponse.error instanceof ErrorEvent) {\r\n         console.error('Client Side Error :', errorResponse.error.message);\r\n     } else {\r\n         console.error('Server Side Error :', errorResponse);\r\n     }\r\n     return new ErrorObservable('There is a problem with the service.We are notified & working on it. Please try again later.');\r\n     }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/Shared/Services/gpdetails.sevice.ts","import {Injectable} from '@angular/core';\r\nimport { Patient } from '../../models/patient.model';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Http,Response} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\n\r\n@Injectable()\r\nexport class PatientsService{\r\n\r\n    baseAPI_URL = 'http://localhost:58010/api';\r\n    \r\n    //.............. Inject dependencies\r\n    constructor(private _http:Http,\r\n        private _httpClient:HttpClient\r\n    ){}\r\n\r\n  \r\n\r\n   //............... Get Patients\r\n   getPatients(): Observable<Patient[]> {\r\n    return  this._http.get(this.baseAPI_URL + '/Patient')\r\n       .map((response:Response)=><Patient[]>response.json())\r\n       .catch(this.handleError);\r\n   }\r\n\r\n   //............... Get Patient by ID\r\n   getPatient(ID:number): Observable<Patient> {\r\n    return  this._http.get(this.baseAPI_URL+'/Patient/'+ID)\r\n                      .map((response:Response)=><Patient[]>response.json())\r\n                      .catch(this.handleError);\r\n   }\r\n\r\n   //............... Save Patient\r\n   Save(patient: Patient):Observable<Patient>{\r\n         return this._httpClient.post<Patient>(this.baseAPI_URL+'/Patient/AddPatient',patient,{\r\n             headers:new HttpHeaders({\r\n                 'Content-Type':'application/json'\r\n               })\r\n         }).catch(this.handleError);;        \r\n   }\r\n\r\n   //............... Update Patient\r\n   UpdatePatient(patient: Patient):Observable<void>{\r\n        return this._httpClient.put<void>(this.baseAPI_URL+'/Patient/'+ patient.ID,patient,{\r\n            headers:new HttpHeaders({\r\n                'Content-Type':'application/json'\r\n              })\r\n        }).catch(this.handleError);     \r\n  }\r\n\r\n  //............... Delete Patient\r\n   deletePatient(id:number):Observable<void>{\r\n    return this._httpClient.delete<void>(this.baseAPI_URL+'/Patient/'+id,{\r\n      headers:new HttpHeaders({\r\n          'Content-Type':'application/json'\r\n        })\r\n     }).catch(this.handleError);\r\n   }\r\n\r\n   private handleError(errorResponse: HttpErrorResponse) {\r\n    if (errorResponse.error instanceof ErrorEvent) {\r\n        console.error('Client Side Error :', errorResponse.error.message);\r\n    } else {\r\n        console.error('Server Side Error :', errorResponse);\r\n    }\r\n    // return an observable with a meaningful error message to the end user\r\n    return new ErrorObservable('There is a problem with the service.We are notified & working on it. Please try again later.');\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/Shared/Services/patients.service.ts","import { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n// Import input from @angular/core package\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appSelectValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: SelectRequiredValidatorDirective,\r\n        multi: true\r\n    }]\r\n})\r\nexport class SelectRequiredValidatorDirective implements Validator {\r\n    // Create input property to receive the\r\n    // specified default option value\r\n    @Input() appSelectValidator: string;\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n        // Remove the hard-coded value and use the input property instead\r\n        return control.value === this.appSelectValidator ?\r\n                                    { 'defaultSelected': true } : null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/Shared/select-required-valiator.directive.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".backgroundColor{\\r\\n    background-color:#347AB6;\\r\\n}\\r\\n\\r\\n.linkDesign{\\r\\n    font-weight: bold;\\r\\n    \\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-default backgroundColor\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n          <li> \\n              <a routerLink=\\\"list\\\" style=\\\"color:white\\\" class=\\\"linkDesign\\\">LIST</a>\\n          </li>\\n          <li>\\n              <a routerLink=\\\"edit/0\\\" style=\\\"color:white\\\" class=\\\"linkDesign\\\">CREATE PATIENT</a>\\n          </li>\\n          <li>\\n              <a routerLink=\\\"creategpdetail\\\" style=\\\"color:white\\\" class=\\\"linkDesign\\\">CREATE GENERAL PRACTITIONER</a>\\n          </li>\\n      </ul>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule,Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport {SelectRequiredValidatorDirective} from './Shared/select-required-valiator.directive';\n\n\nimport {CreateEmployeeCanDeactivateGuardService} from './patients/create-patient-can-deactive-guard.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { ListEmployeesComponent } from './employees/list-employees.component';\nimport { ListPatientsComponent } from './patients/list-patients.component';\nimport { CreatePatientComponent } from './patients/create-patient.component';\nimport { PatientDetailsComponent } from './patients/patient-details.component';\nimport { CreateGpdetailComponent } from './gpdetail/create-gpdetail.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {FacadeService} from './Shared/Services/facade.service';\nimport {GPDetailsService} from './Shared/Services/gpdetails.sevice';\nimport {PatientsService} from './Shared/Services/patients.service';\n\n const appRoutes:Routes=[\n   { path:'list',component:ListPatientsComponent },\n   { path:'edit/:id',\n   component:CreatePatientComponent,\n   canDeactivate:[CreateEmployeeCanDeactivateGuardService] \n  },\n  { path:'patients/:id',component:PatientDetailsComponent },\n  { path:'creategpdetail',component:CreateGpdetailComponent },\n   { path:'',redirectTo:'/list',pathMatch:'full' }\n ]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListEmployeesComponent,\n    ListPatientsComponent,\n    CreatePatientComponent,\n    SelectRequiredValidatorDirective,\n    PatientDetailsComponent,\n    CreateGpdetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    HttpModule,\n    BsDatepickerModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  exports:[\n    NgxPaginationModule\n  ],\n  providers: [\n    FacadeService,\n    GPDetailsService,\n    PatientsService,\n    CreateEmployeeCanDeactivateGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".imageClass{\\r\\n    width:200px;\\r\\n    height:200px;\\r\\n}\\r\\n.vertical-align{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.css\n// module id = ../../../../../src/app/employees/list-employees.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-primary\\\" *ngFor=\\\"let employee of employees\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">{{employee.name}}</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n\\n    <div class=\\\"col-xs-10\\\">\\n\\n      <div class=\\\"row vertical-align\\\">\\n\\n        <div class=\\\"col-xs-4\\\">\\n          <img class=\\\"imageClass\\\" [src]=\\\"employee.photoPath\\\" />\\n        </div>\\n        <div class=\\\"col-xs-8\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Gender\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.gender}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Date of Birth\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.dateOfBirth | date}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Contact Preference\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.contactPreference}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Phone\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.phoneNumber}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Email\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.email}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Department\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.department}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Is Active\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{employee.isActive}}\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.html\n// module id = ../../../../../src/app/employees/list-employees.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../models/employee.model';\n\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.css']\n})\nexport class ListEmployeesComponent implements OnInit {\n\n\n  employees: Employee[] = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@pragimtech.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'IT',\n      isActive: true,\n      photoPath: 'assets/images/mark.png'\n    },\n    {\n      id: 2,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Phone',\n      phoneNumber: 2345978640,\n      dateOfBirth: new Date('11/20/1979'),\n      department: 'HR',\n      isActive: true,\n      photoPath: 'assets/images/mary.png'\n    },\n    {\n      id: 3,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Phone',\n      phoneNumber: 5432978640,\n      dateOfBirth: new Date('3/25/1976'),\n      department: 'IT',\n      isActive: false,\n      photoPath: 'assets/images/john.png'\n    },\n  ];\n\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/employees/list-employees.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.css\n// module id = ../../../../../src/app/gpdetail/create-gpdetail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      </div>\\n\\n  <div class=\\\"col-md-8\\\">\\n  <form #gpDetailForm=\\\"ngForm\\\" ngNativeValidate novalidate (ngSubmit)=\\\"saveGPDetail()\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Create GP Detail</h3>\\n      </div>\\n     \\n      <div class=\\\"panel-body\\\">\\n\\n       <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"GPCode.invalid && GPCode.touched\\\"\\n           [class.has-success] = \\\"GPCode.valid\\\">\\n          <label for=\\\"GPCode\\\" class=\\\"control-label\\\">Pass Number</label>\\n          <input required id=\\\"GPCode\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #GPCode=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                 name=\\\"GPCode\\\" [(ngModel)]=\\\"gpDetail.GPCode\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"GPCode.invalid && GPCode.touched\\\">\\n                   Pass Number is required\\n                 </span>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"GPSurname.invalid && GPSurname.touched\\\"\\n             [class.has-success] = \\\"GPSurname.valid\\\">\\n            <label for=\\\"GPSurname\\\" class=\\\"control-label\\\">Sur Name</label>\\n            <input required id=\\\"GPSurname\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #GPSurname=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                   name=\\\"GPSurname\\\" [(ngModel)]=\\\"gpDetail.GPSurname\\\">\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"GPSurname.invalid && GPSurname.touched\\\">\\n                    Sur Name is required\\n                   </span>\\n          </div>\\n  \\n        </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"GPInitials.invalid && GPInitials.touched\\\"\\n               [class.has-success] = \\\"GPInitials.valid\\\">\\n              <label for=\\\"GPInitials\\\" class=\\\"control-label\\\">GP Initials</label>\\n              <input required id=\\\"GPInitials\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #GPInitials=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                     name=\\\"GPInitials\\\" [(ngModel)]=\\\"gpDetail.GPInitials\\\">\\n                     <span class=\\\"help-block\\\" *ngIf=\\\"GPInitials.invalid && GPInitials.touched\\\">\\n                       GP Initial is required\\n                     </span>\\n            </div>\\n    \\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\" [class.has-error]=\\\"GPPhone.invalid && GPPhone.touched\\\"\\n                 [class.has-success] = \\\"GPPhone.valid\\\">\\n                <label for=\\\"GPPhone\\\" class=\\\"control-label\\\">GP Phone</label>\\n                <input required id=\\\"GPPhone\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #GPPhone=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                       name=\\\"GPPhone\\\" [(ngModel)]=\\\"gpDetail.GPPhone\\\">\\n                       <span class=\\\"help-block\\\" *ngIf=\\\"GPPhone.invalid && GPPhone.touched\\\">\\n                         Phone Number is required\\n                       </span>\\n              </div>\\n      \\n            </div>\\n\\n     \\n      </div>\\n \\n      </div>\\n\\n      <div class=\\\"panel-footer\\\">\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"gpDetailForm.invalid\\\">Save</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"col-md-2\\\">\\n\\n    <!-- <app-list-patient></app-list-patient> -->\\n\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.html\n// module id = ../../../../../src/app/gpdetail/create-gpdetail.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {GPDetail} from '../models/gpdetail.model';\nimport { NgForm } from '@angular/forms';\n\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport { FacadeService } from '../Shared/Services/facade.service';\n\n@Component({\n  selector: 'app-create-gpdetail',\n  templateUrl: './create-gpdetail.component.html',\n  styleUrls: ['./create-gpdetail.component.css']\n})\nexport class CreateGpdetailComponent implements OnInit {\n\n  constructor(private _facadeService:FacadeService,private _router:Router) { }\n \n  gpDetail : GPDetail = {\n    ID:null,\n    GPCode: null,\n    GPSurname: null,\n    GPInitials :null,\n    GPPhone: null\n  };\n\n  @ViewChild('gpDetailForm') public CreateGPForm: NgForm;\n\n  ngOnInit() {\n  }\n\n  saveGPDetail(employeeForm: NgForm): void {\n      this._facadeService.SaveGPDetails(this.gpDetail).subscribe(\n        (data:GPDetail) => {\n          console.log(data);\n          this.CreateGPForm.reset();\n          this._router.navigate(['list']);\n        },\n         (error:any) => console.log(error)\n         );\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/gpdetail/create-gpdetail.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { CreatePatientComponent } from './create-patient.component';\r\n\r\n@Injectable()\r\nexport class CreateEmployeeCanDeactivateGuardService\r\n    implements CanDeactivate<CreatePatientComponent> {\r\n\r\n    constructor() { }\r\n\r\n    canDeactivate(component: CreatePatientComponent): boolean {\r\n        if (component.CreatePatientForm.dirty) {\r\n            return confirm('Are you sure you want to discard your changes?');\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/patients/create-patient-can-deactive-guard.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.css\n// module id = ../../../../../src/app/patients/create-patient.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      </div>\\n\\n  <div class=\\\"col-md-8\\\">\\n  <form #employeeForm=\\\"ngForm\\\" ngNativeValidate novalidate (ngSubmit)=\\\"savePatients()\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">{{panelTitle}}</h3>\\n      </div>\\n     \\n      <div class=\\\"panel-body\\\">\\n          <fieldset >\\n              <legend>Basic Information</legend>\\n       <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"PassNumber.invalid && PassNumber.touched\\\"\\n           [class.has-success] = \\\"PassNumber.valid\\\">\\n          <label for=\\\"PassNumber\\\" class=\\\"control-label\\\">Pass Number</label>\\n          <input required id=\\\"PassNumber\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #PassNumber=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                 name=\\\"PassNumber\\\" [(ngModel)]=\\\"patients.PassNumber\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"PassNumber.invalid && PassNumber.touched\\\">\\n                   Pass Number is required\\n                 </span>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"ForeNames.invalid && ForeNames.touched\\\"\\n        [class.has-success] = \\\"ForeNames.valid\\\">        \\n          <label for=\\\"ForeNames\\\" class=\\\"control-label\\\">Fore Name</label>\\n          <input required id=\\\"ForeNames\\\" type=\\\"text\\\" #ForeNames=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                 name=\\\"ForeNames\\\" maxlength=\\\"12\\\" [(ngModel)]=\\\"patients.ForeNames\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"ForeNames.invalid && ForeNames.touched\\\">\\n                  Fore Names is required\\n                </span>\\n        </div>\\n      </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"DateOfBirth\\\">Date of Birth</label>\\n            <input readonly=\\\"true\\\" id=\\\"DateOfBirth\\\"  name=\\\"DateOfBirth\\\" [(ngModel)]=\\\"patients.DateOfBirth\\\" placement=\\\"bottom\\\"\\n                    type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" class=\\\"form-control\\\" />\\n          </div>\\n\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"Gender.invalid && Gender.touched\\\">\\n                <label class=\\\"control-label\\\">Gender</label>\\n                <div class=\\\"form-control\\\">\\n                  <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" required #Gender=\\\"ngModel\\\" name=\\\"Gender\\\" value=\\\"male\\\" [(ngModel)]=\\\"patients.Gender\\\">\\n                    Male\\n                  </label>\\n                  <label class=\\\"radio-inline\\\">\\n                    <input type=\\\"radio\\\" required #Gender=\\\"ngModel\\\" name=\\\"Gender\\\" value=\\\"female\\\" [(ngModel)]=\\\"patients.Gender\\\">\\n                    Female\\n                  </label>\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"Gender.invalid && Gender.touched\\\">\\n                    Gender is required\\n                  </span>\\n                </div>\\n              </div>   \\n\\n          </div>\\n\\n      </div>\\n     \\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\" [class.has-error]=\\\"HomeTelephoneNumber.invalid && HomeTelephoneNumber.touched\\\"\\n              [class.has-success] = \\\"HomeTelephoneNumber.valid\\\"\\n              >\\n                  <label  for=\\\"HomeTelephoneNumber\\\" class=\\\"control-label\\\">Home Telephone Number</label>\\n                  <input required id=\\\"HomeTelephoneNumber\\\" maxlength=\\\"15\\\" type=\\\"text\\\" #HomeTelephoneNumber=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                         name=\\\"HomeTelephoneNumber\\\" [(ngModel)]=\\\"patients.HomeTelephoneNumber\\\">\\n                         <span class=\\\"help-block\\\" *ngIf=\\\"HomeTelephoneNumber.invalid && HomeTelephoneNumber.touched\\\">\\n                          Telephone Number is required\\n                        </span>\\n                </div>\\n  \\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\" [class.has-error]=\\\"GeneralPartitioner.invalid && GeneralPartitioner.touched\\\"\\n                  [class.has-success] = \\\"GeneralPartitioner.valid\\\">\\n                      <label for=\\\"GeneralPartitioner\\\">General Practitioner</label>\\n                      <select id=\\\"GeneralPartitioner\\\" appSelectValidator=\\\"-1\\\"  name=\\\"GeneralPartitioner\\\"\\n                              [(ngModel)]=\\\"patients.GeneralPartitioner\\\"  class=\\\"form-control\\\" #GeneralPartitioner=\\\"ngModel\\\">\\n                              \\n                              <option  value=\\\"-1\\\">Please Select</option>\\n                              <option *ngFor=\\\"let gp of generalPractitioners\\\" [value]=\\\"gp.ID\\\">\\n                                  {{gp.GPSurname}}\\n                                </option>\\n                      </select>\\n                      <span class=\\\"help-block\\\" *ngIf=\\\"GeneralPartitioner.touched && GeneralPartitioner.errors?.defaultSelected \\\">\\n                        General Practitioner is required\\n                      </span>\\n                    </div>\\n                </div>   \\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"SurName.invalid && SurName.touched\\\"\\n           [class.has-success] = \\\"SurName.valid\\\">\\n          <label for=\\\"SurName\\\" class=\\\"control-label\\\">Sur Name</label>\\n          <input required id=\\\"SurName\\\" maxlength=\\\"8\\\"  type=\\\"text\\\" #SurName=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                 name=\\\"SurName\\\" [(ngModel)]=\\\"patients.SurName\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"SurName.invalid && SurName.touched\\\">\\n                    Sur Name  is required\\n                 </span>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n    \\n      </div>\\n      </div>\\n      </fieldset>\\n\\n      <fieldset >\\n          <legend>Next Of Kin Information</legend>\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"NOKName.invalid && NOKName.touched\\\"\\n    [class.has-success] = \\\"NOKName.valid\\\">\\n      <label for=\\\"NOKName\\\" class=\\\"control-label\\\">NOK Name</label>\\n      <input required id=\\\"NOKName\\\" type=\\\"text\\\" #NOKName=\\\"ngModel\\\" class=\\\"form-control\\\"\\n             name=\\\"NOKName\\\" maxlength=\\\"12\\\" [(ngModel)]=\\\"patients.NOKName\\\">\\n             <span class=\\\"help-block\\\" *ngIf=\\\"NOKName.invalid && NOKName.touched\\\">\\n              Next Of Kin Name is required\\n            </span>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"form-group\\\" [class.has-error]=\\\"relationShip.invalid && relationShip.touched\\\"\\n    [class.has-success] = \\\"relationShip.valid\\\">\\n\\n      <label for=\\\"relationShip\\\" class=\\\"control-label\\\">Relation Ship</label>\\n      <input required id=\\\"relationShip\\\" type=\\\"text\\\" #relationShip=\\\"ngModel\\\" class=\\\"form-control\\\"\\n             name=\\\"relationShip\\\" [(ngModel)]=\\\"patients.relationShip\\\">\\n             <span class=\\\"help-block\\\" maxlength=\\\"12\\\" *ngIf=\\\"relationShip.invalid && relationShip.touched\\\">\\n              RelationShip is required\\n            </span>\\n    </div>\\n  </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"NOKAddress1.invalid && NOKAddress1.touched\\\"\\n        [class.has-success] = \\\"NOKAddress1.valid\\\"\\n        >\\n            <label for=\\\"NOKAddress1\\\" class=\\\"control-label\\\">NOK Address 1</label>\\n            <textarea required id=\\\"NOKAddress1\\\" type=\\\"text\\\" #NOKAddress1=\\\"ngModel\\\" rows=\\\"3\\\"  class=\\\"form-control\\\"\\n                   name=\\\"NOKAddress1\\\" [(ngModel)]=\\\"patients.NOKAddress1\\\"></textarea>\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"NOKAddress1.invalid && NOKAddress1.touched\\\">\\n                   Address 1 Name is required\\n                  </span>\\n          </div>          \\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"NOKAddress2\\\">NOK Address 2</label>\\n            <textarea id=\\\"NOKAddress2\\\" rows=\\\"3\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                   name=\\\"NOKAddress2\\\" [(ngModel)]=\\\"NOKAddress2\\\"></textarea>\\n          </div> \\n\\n      </div>\\n\\n  </div>\\n \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"NOKAddress3\\\">NOK Address 3</label>\\n              <textarea id=\\\"NOKAddress3\\\" rows=\\\"3\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                     name=\\\"NOKAddress3\\\" [(ngModel)]=\\\"NOKAddress3\\\"></textarea>\\n            </div>\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"NOKAddress4\\\">NOK Address 4</label>\\n              <textarea id=\\\"NOKAddress4\\\" rows=\\\"3\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                     name=\\\"NOKAddress4\\\" [(ngModel)]=\\\"NOKAddress4\\\"></textarea>\\n            </div>\\n        </div>\\n    </div>\\n  </fieldset>\\n\\n      </div>\\n\\n      <div class=\\\"panel-footer\\\">\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"employeeForm.invalid\\\">Save</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"col-md-2\\\">\\n\\n    <!-- <app-list-patient></app-list-patient> -->\\n\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.html\n// module id = ../../../../../src/app/patients/create-patient.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Patient} from '../models/patient.model';\nimport {BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport { GPDetail } from '../models/gpdetail.model';\nimport { FacadeService } from '../Shared/Services/facade.service';\n\n@Component({\n  selector: 'app-create-patient',\n  templateUrl: './create-patient.component.html',\n  styleUrls: ['./create-patient.component.css']\n})\nexport class CreatePatientComponent implements OnInit {\n  datePickerConfig: Partial<BsDatepickerConfig>;\n  panelTitle:string;\n  @ViewChild('employeeForm') public CreatePatientForm: NgForm;\n\n  gender = 'male';\n  \n  patients : Patient = {\n    ID: null,\n    PassNumber: null,\n    ForeNames: null,\n    SurName : null,\n    DateOfBirth:  null,\n    Gender: null,\n    GeneralPartitioner: '-1',\n    HomeTelephoneNumber: null,\n    NOKName: null,\n    relationShip: null,\n    NOKAddress1: null,\n    NOKAddress2: null,\n    NOKAddress3:null,\n    NOKAddress4: null, \n    GPSurName: null\n  };\n\n  generalPractitioners:GPDetail[];\n\n  constructor(private _facadeService:FacadeService,\n    private _router:Router,\n    private _route:ActivatedRoute\n  ) { \n\n    this.datePickerConfig = Object.assign({},\n      {\n        containerClass:'theme-dark-blue',\n        showWeekNumbers:true,\n        dateInputFormat: 'YYYY-MM-DD'\n      });\n  }\n\n  ngOnInit() {\n    this._route.paramMap.subscribe(parameterMap =>{\n      const id = +parameterMap.get('id');\n      this.getEmployee(id);\n    });\n  }\n\n  private getEmployee(ID:number){\n   if(ID === 0){\n\n     this.patients = {\n      ID: null,\n      PassNumber: null,\n      ForeNames: null,\n      SurName : null,\n      DateOfBirth:  null,\n      Gender: null,\n      GeneralPartitioner: '-1',\n      HomeTelephoneNumber: null,\n      NOKName: null,\n      relationShip: null,\n      NOKAddress1: null,\n      NOKAddress2: null,\n      NOKAddress3:null,\n      NOKAddress4: null, \n      GPSurName: null\n    };\n\n    this._facadeService.GetGpDetails().subscribe((generalPractitioners)=>this.generalPractitioners=generalPractitioners);\n    this.panelTitle = \"Create Employee\";\n\n    \n   }else{\n    this._facadeService.GetGpDetails().subscribe((generalPractitioners)=>this.generalPractitioners=generalPractitioners);\n    this.panelTitle = \"Update Employee\";\n    this._facadeService.GetPatient(ID).subscribe((patientData)=>this.patients=patientData); \n    \n   }\n      \n  }\n\n  savePatients(employeeForm: NgForm): void {\n\n    if(this.patients.ID == null){\n\n      this._facadeService.SavePatient(this.patients).subscribe(\n        (data:Patient) => {\n          console.log(data);\n          this.CreatePatientForm.reset();\n           this._router.navigate(['list']);\n        },\n         (error:any) => console.log(error)\n         );\n    }else{\n     \n      this._facadeService.UpdatePatient(this.patients).subscribe(\n        () => {        \n          this.CreatePatientForm.reset();\n           this._router.navigate(['list']);\n        },\n         (error:any) => console.log(error)\n         );\n    } \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/patients/create-patient.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".CursorPointer{\\r\\n\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n.backgroundColor{\\r\\n    background-color:#347AB6;\\r\\n}\\r\\n\\r\\n\\r\\n.textcolor{\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.css\n// module id = ../../../../../src/app/patients/list-patients.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\" table-responsive\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n        <nav class=\\\"navbar\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" placeholder=\\\"Search\\\">      \\n          </nav>\\n\\n    </div>\\n   \\n</div>\\n<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr class=\\\"backgroundColor\\\">      \\n      <th class=\\\"textcolor\\\">Pass Number</th>\\n    \\n      <th class=\\\"textcolor\\\">Sur Name</th>\\n      <th class=\\\"textcolor\\\">Date Of Birth</th>\\n      <th class=\\\"textcolor\\\">Gender</th>\\n      <th class=\\\"textcolor\\\">Action</th>\\n    </tr> \\n  </thead> \\n  <tbody style=\\\"text-align: center\\\">\\n    <tr *ngFor=\\\"let patient of patients | filter:filter | paginate: { itemsPerPage: 8, currentPage: p }; let i = index\\\">\\n        \\n      <td >{{ patient.PassNumber | titlecase }}</td>\\n    \\n      <td>{{ patient.SurName | titlecase }}</td>\\n      <td>{{ patient.DateOfBirth | date }}</td>\\n      <td>{{ patient.Gender | titlecase}}</td>\\n      <td>\\n         <button class=\\\"CursorPointer\\\" type=\\\"button\\\" (click)=\\\"onDetail(patient.ID)\\\" class=\\\"btn btn-primary btn-sm\\\">Detail</button> \\n        | <button class=\\\"CursorPointer\\\" type=\\\"button\\\" (click)=\\\"onDelete(patient.ID)\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button>  \\n        | <button class=\\\"CursorPointer\\\" type=\\\"button\\\" (click)=\\\"onEdit(patient.ID)\\\" class=\\\"btn btn-success\\\">Edit</button> \\n       </td>\\n    </tr> \\n    <tr> \\n      \\n      <td colspan=\\\"6\\\"><pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls></td>\\n      \\n    </tr>\\n  </tbody>\\n  \\n</table>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.html\n// module id = ../../../../../src/app/patients/list-patients.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Patient } from '../models/patient.model';\n\nimport {Router} from '@angular/router';\n\nimport { FacadeService } from '../Shared/Services/facade.service';\n@Component({\n  selector: 'app-list-patient',\n  templateUrl: './list-patients.component.html',\n  styleUrls: ['./list-patients.component.css']\n})\nexport class ListPatientsComponent implements OnInit {\n  //initializing p to one\n  p: number = 1;\n   patients:Patient[];\n  constructor(private _facadePattern:FacadeService,\n       private _router: Router\n     ) {   }\n  ngOnInit() { \n    // this._patientService.getPatients().subscribe((patientData)=>this.patients=patientData);\n    this._facadePattern.GetPatients().subscribe((patientData)=>this.patients=patientData);;\n  }\n  \n  onDetail(patientID:number){\n\n    this._router.navigate(['/patients',patientID]);\n  }  \n\n  onDelete(patientID:number){\n\n    if(confirm(\"Are you sure to delete ?\")) {\n      this._facadePattern.DeletePatient(patientID).subscribe(\n        () => {        \n          this._router.navigate(['list']);\n        },\n         (error:any) => console.log(error)\n         );\n      //   this._router.navigate(['/patients',patientID]);\n    }\n\n\n  }\n  onEdit(patientID:number){\n\n    this._router.navigate(['/edit',patientID]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/patients/list-patients.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.css\n// module id = ../../../../../src/app/patients/patient-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">{{patientdetail?.ForeNames}}</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"col-xs-10\\\">\\n      <div class=\\\"row vertical-align\\\">      \\n        <div class=\\\"col-xs-8\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Pass Number\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              : {{patientdetail?.PassNumber}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n             Fore Names\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              :  {{patientdetail?.ForeNames}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n             Sur Names\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              :  {{patientdetail?.SurName}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Date Of Birth\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              :  {{patientdetail?.DateOfBirth | date}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Gender\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              :  {{patientdetail?.Gender}}\\n            </div>\\n          </div>\\n      \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n              Home Telephone Number\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n              :  {{patientdetail?.HomeTelephoneNumber}}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                  General Partitioner\\n              </div>\\n              <div class=\\\"col-xs-6\\\">\\n                :  {{patientdetail?.GPSurName}}\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                 Next Of Kin Name\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                  :  {{patientdetail?.NOKName}}\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-6\\\">\\n                   Relation\\n                  </div>\\n                  <div class=\\\"col-xs-6\\\">\\n                    :  {{patientdetail?.relationShip}}\\n                  </div>\\n                </div>\\n\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-6\\\">\\n                   Nok Address 1\\n                  </div>\\n                  <div class=\\\"col-xs-6\\\">\\n                    :  {{patientdetail?.NOKAddress1}}\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-6\\\">\\n                        Nok Address 2\\n                    </div>\\n                    <div class=\\\"col-xs-6\\\">\\n                      :  {{patientdetail?.NOKAddress2}}\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-xs-6\\\">\\n                          Nok Address 3\\n                      </div>\\n                      <div class=\\\"col-xs-6\\\">\\n                        :  {{patientdetail?.NOKAddress3}}\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-6\\\">\\n                            Nok Address 4\\n                        </div>\\n                        <div class=\\\"col-xs-6\\\">\\n                          :  {{patientdetail?.NOKAddress4}}\\n                        </div>\\n                      </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-footer\\\">\\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"/list\\\">\\n      Back to List\\n    </a>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.html\n// module id = ../../../../../src/app/patients/patient-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { Employee } from '../models/employee.model';\nimport { Patient } from '../models/patient.model';\nimport { FacadeService } from '../Shared/Services/facade.service';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './patient-details.component.html',\n  styleUrls: ['./patient-details.component.css']\n})\nexport class PatientDetailsComponent implements OnInit {\n patientdetail: Patient;\n  constructor(private _route: ActivatedRoute,\n              private _facadeService:FacadeService\n  ) { }\n\n  ngOnInit() {\n    const id =  +this._route.snapshot.params['id'];\n    this._facadeService.GetPatient(id).subscribe(\n      (patientData)=>this.patientdetail=patientData); \n    //this.patient = this._patientService.getPatient(id);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/app/patients/patient-details.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// F:/AngularCrud/AngularCrud/src/main.ts"],"sourceRoot":"webpack:///"}